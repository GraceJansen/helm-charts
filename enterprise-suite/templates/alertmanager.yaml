{{- $shouldCreatePVCs := and (or .Values.usePersistentVolumes (not .Values.useEmptyDirVolumes)) (.Values.createPersistentVolumes) }}
---
{{ if not .Values.alertManagerAddress }}
{{ if $shouldCreatePVCs }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: alertmanager-storage
  annotations:
    "helm.sh/resource-policy": keep
spec:
  storageClassName: {{ default .Values.defaultStorageClass .Values.esAlertmanagerStorageClass }}
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.alertmanagerVolumeSize }}
{{ end }}
---
apiVersion: {{ .Values.deploymentApiVersion }}
kind: Deployment
metadata:
  labels:
    app: prometheus
    component: alertmanager
  name: prometheus-alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      component: alertmanager
  template:
    metadata:
      labels:
        app: prometheus
        component: alertmanager
    spec:
      {{ if .Values.podUID }}
      securityContext:
        runAsUser: {{ .Values.podUID }}
      {{ end }}
      serviceAccountName: default
      containers:
        - name: prometheus-alertmanager
          image: {{ .Values.alertManagerImage }}:{{ .Values.alertManagerVersion }}
          resources:
            requests:
              cpu: {{ default .Values.defaultCPURequest .Values.alertManagerCPURequest }}
              memory: {{ default .Values.defaultMemoryRequest .Values.alertManagerMemoryRequest }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --cluster.listen-address=$(POD_IP):6783

          ports:
            - containerPort: {{ .Values.alertManagerPort }}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: {{ .Values.alertManagerPort }}
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: {{ .Values.alertManagerPort }}
            timeoutSeconds: 30
            initialDelaySeconds: 30

          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data-volume
              mountPath: /data

        - name: prometheus-alertmanager-configmap-reload
          image: {{ .Values.configMapReloadImage }}:{{ .Values.configMapReloadVersion }}
          resources:
            requests:
              cpu: {{ default .Values.defaultCPURequest .Values.configmapReloadCPURequest }}
              memory: {{ default .Values.defaultMemoryRequest .Values.configmapReloadMemoryRequest }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:{{- .Values.alertManagerPort }}/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true

      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.alertManagerConfigMap }}
        - name: data-volume
          {{ if or .Values.usePersistentVolumes (not .Values.useEmptyDirVolumes) }}
          persistentVolumeClaim:
            claimName: alertmanager-storage
          {{ else }}
          emptyDir: {}
          {{ end }}

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
spec:
  ports:
  - name: http
    port: {{ .Values.alertManagerPort }}
    targetPort: {{ .Values.alertManagerPort }}
  selector:
    app: prometheus
    component: alertmanager
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: prometheus
    component: alertmanager
  name: alertmanager-default
data:
{{ (.Files.Glob "alertmanager/*").AsConfig | indent 2}}
{{ end }}